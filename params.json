{"name":"Node-imagemagick","tagline":"A Node.js interface to the ImageMagick commandline tools","body":"# node-imagemagick\r\n\r\n[![Build Status](https://travis-ci.org/Cybolic/node-imagemagick.png?branch=master)](https://travis-ci.org/Cybolic/node-imagemagick)\r\n\r\nA Node.js interface to the ImageMagick command-line tools.\r\n\r\nNOTE: This project does not yet support all of ImageMagicks tools. Currently only `convert` is supported.\r\n\r\n## Examples\r\n\r\nTo save a thumbnail of an image:\r\n```javascript\r\nimagemagick = require('imagemagick');\r\n\r\n/* Run the command immediately: */\r\nimagemagick.convert(\r\n  {define: {jpeg:{size:{width:256, height:256}}}},      // `define` definitions are serialised and `geometry` values are parsed.\r\n  {add: 'image.png'},                                   // `add` is a way to add custom arguments, in this case the filename.\r\n  'autoOrient',                                         // options that don't require arguments can be given as a string or object (e.g. `{autoOrient: null}`).\r\n  {fuzz:5},\r\n  'trim',\r\n  {repage: true},                                       // if a Boolean is given as the only argument, then the option functions as a reset (e.g. '+repage').\r\n  'strip',\r\n  {thumbnail: {width:128,height:128,onlyShrink:true}},  // `geometry` object values have a more clear syntax, but you can give a string if you want (e.g. \"128x128>\").\r\n  {unsharp: 0.5},                                       // `unsharp` accepts either a sigma value or an object as an argument (e.g. `{unsharp: {sigma:6, gain:0.5, threshold:0}}`).\r\n  {add: 'PNG8:image_thumb.png'},\r\n  function(error, stdout, stderr) {                     // any argument that is a Function will be used as the callback.\r\n    console.log(\"Thumbnail created.\");                  // If you prefer events, 'run_error' or 'run_success' will be emitted if a callback function isn't given.\r\n  }\r\n);\r\n\r\n/* Or create it programmatically: */\r\nvar cropImage = true;\r\nvar convert = imagemagick.convert()\r\n  .define({jpeg:{size:{width:256, height:256}}})\r\n  .add('image.png'})\r\n  .autoOrient()\r\n;\r\nif (cropImage) {\r\n  convert\r\n    .fuzz(5)\r\n    .trim()\r\n    .repage(true)\r\n  ;\r\n}\r\nconvert\r\n  .strip()\r\n  .thumbnail({width:128,height:128,onlyShrink:true})\r\n  .unsharp(0.5)\r\n  .add('PNG8:image_thumb.png')\r\n;\r\nconvert.on('run_success', function(stdout) {\r\n    console.log(\"Thumbnail created.\");\r\n});\r\nconvert.run();\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}